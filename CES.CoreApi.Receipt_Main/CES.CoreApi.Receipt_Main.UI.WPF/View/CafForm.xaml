<UserControl x:Class="CES.CoreApi.Receipt_Main.UI.WPF.View.CafForm"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CES.CoreApi.Receipt_Main.UI.WPF.View"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:model="clr-namespace:CES.CoreApi.Receipt_Main.UI.WPF.Model"
             xmlns:model1="clr-namespace:CES.CoreApi.Receipt_Main.UI.WPF.ViewModel"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance model1:CafFormViewModel, d:IsDesignTimeCreatable=False}"
             xmlns:md="https://github.com/fantasticfiasco/mvvm-dialogs" 
             md:DialogServiceViews.IsRegistered="True">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- note you only need bring in these extra resource dictionaries when using non-default styles, so only bring them into your controls where the default style is not what you want -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ComboBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource MaterialDesignPasswordBox}">
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MaterialDesignComboBox}">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <Style TargetType="{x:Type Viewbox}">
                <Setter Property="Width" Value="18" />
                <Setter Property="Height" Value="18" />
                <Setter Property="Margin" Value="0 0 8 0" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <Style TargetType="{x:Type Slider}" BasedOn="{StaticResource MaterialDesignSlider}">
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <!--<Style TargetType="{x:Type materialDesign:PackIcon}" BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="4 0 4 0" />
            </Style>-->
        </ResourceDictionary>
    </UserControl.Resources>
    <Border Padding="5">
        <StackPanel>
            <TextBlock Text="Edit/New CAF" Padding="10" FontWeight="Bold" VerticalAlignment="Bottom"/>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.15*"/>
                    <ColumnDefinition Width="0.25*"/>
                    <ColumnDefinition Width="0.25*"/>
                    <ColumnDefinition Width="0.25*"/>
                    <ColumnDefinition Width="0.25*"/>
                    <ColumnDefinition Width="0.25*"/>
                    <ColumnDefinition Width="0.25*"/>
                </Grid.ColumnDefinitions>
                <!--ID-->
                <TextBox Grid.Column="0" Width="50" Margin="0,0,10,0" HorizontalAlignment="Left"  IsReadOnly="True"   materialDesign:HintAssist.Hint="ID"
                    Style="{StaticResource MaterialDesignFloatingHintTextBox}">
                    <TextBox.Text>
                        <Binding Path="ID" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <model:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <!--Folio Inicio-->
                <TextBox  Grid.Column="1" Width="100" Margin="0,0,10,0" HorizontalAlignment="Left"  VerticalAlignment="Bottom" materialDesign:HintAssist.Hint="Folio Inicio"
                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"  >
                    <TextBox.Text>
                        <Binding Path="FolioStartNumber" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <model:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <!--Folio Fin-->
                <TextBox Grid.Column="2" Width="100" Margin="0,0,10,0" HorizontalAlignment="Left"  VerticalAlignment="Bottom" materialDesign:HintAssist.Hint="Folio Fin"
                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"  >
                    <TextBox.Text>
                        <Binding Path="FolioEndNumber" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <model:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <!--Folio Actual-->
                <TextBox Grid.Column="3" Width="100" Margin="0,0,10,0" HorizontalAlignment="Left"  VerticalAlignment="Bottom" materialDesign:HintAssist.Hint="Folio Actual"
                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"  >
                    <TextBox.Text>
                        <Binding Path="FolioCurrentNumber" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <model:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <!--Tipo de Documento-->
                <ComboBox Grid.Column="4" 
                   x:Name="DocumenTypeComboBox"
                  materialDesign:HintAssist.Hint="Tipo Documento" 
                  Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                  ItemsSource="{Binding DocumentTypeList}"                          
                  SelectedValue="{Binding SelectedDocumentTypeValue}">
                    <ComboBox.SelectedItem>
                        <Binding Path="SelectedDocumentTypeValue" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <model:NotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </ComboBox.SelectedItem>
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Description}"></TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                    <ComboBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </ComboBox.ItemsPanel>
                </ComboBox>
                <!--Tienda-->
                <ComboBox Grid.Column="5" 
                   x:Name="StoreComboBox"
                  materialDesign:HintAssist.Hint="Tienda" 
                  Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                  ItemsSource="{Binding StoreList}"                          
                  SelectedValue="{Binding SelectedStoreValue}">
                    <ComboBox.SelectedItem>
                        <Binding Path="SelectedStoreValue" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <model:NotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </ComboBox.SelectedItem>
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Name}"></TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                    <ComboBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </ComboBox.ItemsPanel>
                </ComboBox>

            </Grid>

            <!--Contenido-->
            <TextBox AcceptsReturn="True"
                     AcceptsTab="True"
                     TextWrapping="Wrap"
                     VerticalScrollBarVisibility="Visible"
                     VerticalAlignment="Top"
                     materialDesign:HintAssist.Hint="Contenido"
                     Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                     HorizontalAlignment="Left" 
                     Width="595" 
                     Height="112"
                     Margin="0, 10, 10, 10">
                <TextBox.Text>
                    <Binding Path="XmlContent" UpdateSourceTrigger="PropertyChanged">                        
                        <Binding.ValidationRules>
                            <model:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            
            <CheckBox Content="Deshabilitar" IsChecked ="{Binding Disabled}"
                      Margin="0, 10, 10, 10"/>
            <StackPanel>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    
                    <!--Boton Cargar Archivo-->
                    <Button Grid.Column="0"  Width="140" Content="Cargar archivo..."  Height="Auto" Margin="0,0,10,0" HorizontalAlignment="Left" AutomationProperties.AutomationId="MZ16xHTzYE2UP8S9vd-EGw" Command="{Binding OpenFileCommand}" />
                    
                    <!--Boton Cargar-->
                    <Button Grid.Column="1" Width="140"  Content="Guardar" Height="Auto" Margin="0,0,10,0" HorizontalAlignment="Left"  Command="{Binding SaveCommand}"/>

                    <!--Boton Limpiar-->
                    <Button Grid.Column="2" Width="140"  Content="Limpiar" Height="Auto" Margin="0,0,10,0" HorizontalAlignment="Left"  Command="{Binding CleanCommand}"/>
                    
                    <!--Boton Aceptar-->
                     <!--<Button Style="{StaticResource MaterialDesignFlatButton}"
                                        IsDefault="True"
                                        Margin="0 8 8 0"
                                        Command="materialDesign:DialogHost.CloseDialogCommand">
                        <Button.CommandParameter>
                            <system:Boolean>True</system:Boolean>
                        </Button.CommandParameter>
                        Aceptar
                    </Button>-->
                    
                    <!--Boton Cerrar-->
                    <Button  Grid.Column="3" Width="140" Height="Auto" Margin="0,0,10,0" HorizontalAlignment="Left" IsCancel="True" Command="materialDesign:DialogHost.CloseDialogCommand">
                        <Button.CommandParameter>
                            <system:Boolean>False</system:Boolean>
                        </Button.CommandParameter>
                        Cerrar
                    </Button>
                </Grid>

            </StackPanel>
            <TextBlock Text="{Binding Status}" Background="Blue" Foreground="White" FontWeight="Bold" Margin="10 10 10 10" Height="25"></TextBlock>
        </StackPanel>        
    </Border>
</UserControl>
