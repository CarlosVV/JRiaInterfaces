<UserControl x:Class="CES.CoreApi.Receipt_Main.UI.WPF.View.CafManagement"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CES.CoreApi.Receipt_Main.UI.WPF.View"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:model="clr-namespace:CES.CoreApi.Receipt_Main.UI.WPF.Model"
             xmlns:model1="clr-namespace:CES.CoreApi.Receipt_Main.UI.WPF.ViewModel"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="600" Loaded="UserControl_Loaded"
             d:DataContext="{d:DesignInstance model1:CafManagementViewModel, d:IsDesignTimeCreatable=False}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- note you only need bring in these extra resource dictionaries when using non-default styles, so only bring them into your controls where the default style is not what you want -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ComboBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource MaterialDesignPasswordBox}">
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MaterialDesignComboBox}">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <Style TargetType="{x:Type Viewbox}">
                <Setter Property="Width" Value="18" />
                <Setter Property="Height" Value="18" />
                <Setter Property="Margin" Value="0 0 8 0" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <Style TargetType="{x:Type Slider}" BasedOn="{StaticResource MaterialDesignSlider}">
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <Style TargetType="{x:Type materialDesign:PackIcon}" BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                <!--<Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="4 0 4 0" />-->
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="150"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="150"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="150"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Style="{StaticResource MaterialDesignHeadlineTextBlock}">Administración de CAFs</TextBlock>
        <materialDesign:PackIcon Grid.Row="1" Grid.Column="0" Kind="Numeric" Foreground="{Binding ElementName=FolioStartTextBox, Path=BorderBrush}" />
        <TextBox Grid.Row="1" Grid.Column="1" 
				    x:Name="FolioStartTextBox"
				    materialDesign:HintAssist.Hint="Folio Inicio"
                    Style="{StaticResource MaterialDesignFloatingHintTextBox}">
            <TextBox.Text>
                <Binding Path="Name" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <model:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <materialDesign:PackIcon Grid.Row="1" Grid.Column="2" Kind="Numeric" Foreground="{Binding ElementName=FolioEndTextBox, Path=BorderBrush}" />
        <TextBox Grid.Row="1" Grid.Column="3" 
				    x:Name="FolioEndTextBox"
				    materialDesign:HintAssist.Hint="Folio Fin"
                    Style="{StaticResource MaterialDesignFloatingHintTextBox}">
            <TextBox.Text>
                <Binding Path="Name" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <model:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <materialDesign:PackIcon Grid.Row="1" Grid.Column="4" Kind="Details" Foreground="{Binding ElementName=FolioEndTextBox, Path=BorderBrush}" />
        <ComboBox Grid.Row="1" Grid.Column="5" 
                   x:Name="StoreComboBox"
                  materialDesign:HintAssist.Hint="Tienda" 
                  Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                  ItemsSource="{Binding StoreList}"                          
                  SelectedValue="{Binding SelectedStoreValue}">
            <ComboBox.SelectedItem>
                <Binding Path="SelectedStoreValue" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <model:NotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                    </Binding.ValidationRules>
                </Binding>
            </ComboBox.SelectedItem>
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Name}"></TextBlock>
                    </StackPanel>
                </DataTemplate>
            </ComboBox.ItemTemplate>
            <ComboBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </ComboBox.ItemsPanel>
        </ComboBox>
        <materialDesign:PackIcon Grid.Row="2" Grid.Column="0" Kind="Details" Foreground="{Binding ElementName=FolioEndTextBox, Path=BorderBrush}" />
        <ComboBox Grid.Row="2" Grid.Column="1" 
                   x:Name="DocumenTypeComboBox"
                  materialDesign:HintAssist.Hint="Tipo Documento" 
                  Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                  ItemsSource="{Binding DocumentTypeList}"                          
                  SelectedValue="{Binding SelectedDocumentTypeValue}">
            <ComboBox.SelectedItem>
                <Binding Path="SelectedDocumentTypeValue" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <model:NotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                    </Binding.ValidationRules>
                </Binding>
            </ComboBox.SelectedItem>
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Description}"></TextBlock>
                    </StackPanel>
                </DataTemplate>
            </ComboBox.ItemTemplate>
            <ComboBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </ComboBox.ItemsPanel>
        </ComboBox>
        <StackPanel Orientation="Horizontal" Grid.Row="4" Grid.Column="1" HorizontalAlignment="Center" Margin="5">
            <Button Content="Buscar" HorizontalAlignment="Center"/>
            <Button Content="Limpiar" HorizontalAlignment="Center" Margin="2,0,0,0"/>
        </StackPanel>
        
        <StackPanel Grid.Row="6" Grid.ColumnSpan="6">
            <TextBlock Style="{StaticResource MaterialDesignSubheadingTextBlock}">Resultados</TextBlock>
            <DataGrid Margin="0 8 0 0" ItemsSource="{Binding CafResults}" CanUserSortColumns="True" CanUserAddRows="False" AutoGenerateColumns="False"
                      materialDesign:DataGridAssist.CellPadding="13 8 8 8" materialDesign:DataGridAssist.ColumnHeaderPadding="8">
                <DataGrid.Columns>
                    <DataGridCheckBoxColumn Binding="{Binding IsSelected}" 
                                            ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                                            EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}"
                                            >
                        <DataGridCheckBoxColumn.Header>
                            <!--padding to allow hit test to pass thru for sorting -->
                            <Border Background="Transparent" Padding="6 0 6 0" HorizontalAlignment="Center">
                                <CheckBox HorizontalAlignment="Center"                                               
                                          DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext}"
                                          IsChecked="{Binding IsAllCafResultsSelected}" />
                            </Border>
                        </DataGridCheckBoxColumn.Header>
                    </DataGridCheckBoxColumn>
                    <materialDesign:MaterialDataGridTextColumn Binding="{Binding Id}"
                                                               Header="ID"                                                        
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                                                               />
                    <materialDesign:MaterialDataGridTextColumn Binding="{Binding Type}"
                                                               Header="Tipo"                                                        
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                                                               />
                    <materialDesign:MaterialDataGridTextColumn Binding="{Binding Date}"
                                                               Header="Fecha"                                                        
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                                                               />
                    <materialDesign:MaterialDataGridTextColumn Binding="{Binding Start}"
                                                               Header="Folio Inicio"                                                        
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                                                               />
                    <materialDesign:MaterialDataGridTextColumn Binding="{Binding End}"
                                                               Header="Folio Fin"                                                        
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                                                               />
                    <materialDesign:MaterialDataGridTextColumn Binding="{Binding Current}"
                                                               Header="Folio Actual"                                                        
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                                                               />
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button>Ver/Editar</Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>

        </StackPanel>

        <StackPanel Orientation="Horizontal" Grid.Row="7" Grid.Column="1" HorizontalAlignment="Center" Margin="5">
            <Button Content="Eliminar" HorizontalAlignment="Center"/>
        </StackPanel>

    </Grid>
</UserControl>
