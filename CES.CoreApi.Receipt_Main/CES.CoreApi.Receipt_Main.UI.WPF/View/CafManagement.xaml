<UserControl x:Class="CES.CoreApi.Receipt_Main.UI.WPF.View.CafManagement"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CES.CoreApi.Receipt_Main.UI.WPF.View"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:model="clr-namespace:CES.CoreApi.Receipt_Main.UI.WPF.Model"
             xmlns:model1="clr-namespace:CES.CoreApi.Receipt_Main.UI.WPF.ViewModel"
             xmlns:md="https://github.com/fantasticfiasco/mvvm-dialogs"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance model1:CafManagementViewModel, d:IsDesignTimeCreatable=False}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- note you only need bring in these extra resource dictionaries when using non-default styles, so only bring them into your controls where the default style is not what you want -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ComboBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <DataGridCheckBoxColumn x:Key="SelectAllCheckboxColumn" Binding="{Binding IsSelected}" 
                                            ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                                            EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}">
                <DataGridCheckBoxColumn.Header>
                    <!--padding to allow hit test to pass thru for sorting -->
                    <Border Background="Transparent" Padding="6 0 6 0" HorizontalAlignment="Center">
                        <CheckBox 
                                            Name="cbxAll" HorizontalAlignment="Center"                                               
                                            DataContext="{Binding Source={x:Reference dataGrid}, Path=DataContext}" 
                                            Command="{Binding SelectAllCheckboxColumnCommand}" 
                                            CommandParameter="{Binding Path=IsChecked, RelativeSource={RelativeSource Self}}"
                                            />
                    </Border>
                </DataGridCheckBoxColumn.Header>
            </DataGridCheckBoxColumn>
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource MaterialDesignPasswordBox}">
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MaterialDesignComboBox}">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <Style TargetType="{x:Type Viewbox}">
                <Setter Property="Width" Value="18" />
                <Setter Property="Height" Value="18" />
                <Setter Property="Margin" Value="0 0 8 0" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <Style TargetType="{x:Type Slider}" BasedOn="{StaticResource MaterialDesignSlider}">
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <Style TargetType="{x:Type materialDesign:PackIcon}" BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                <!--<Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="4 0 4 0" />-->
            </Style>
            <ControlTemplate x:Key="PopupTemplate">
                <Border 
                Background="White" 
                BorderBrush="Black" 
                Padding="5" 
                BorderThickness="2" 
                CornerRadius="5">
                    <StackPanel Orientation="Vertical">
                        <Button Command="{Binding MyCommand}" 
                            CommandParameter="5">5</Button>
                        <Button Command="{Binding MyCommand}" 
                            CommandParameter="10">10</Button>
                        <Button Command="{Binding MyCommand}" 
                            CommandParameter="15">15</Button>
                        <Button Command="{Binding MyCommand}" 
                            CommandParameter="20">20</Button>
                    </StackPanel>
                </Border>
            </ControlTemplate>
            <ControlTemplate x:Key="MyControlTemplate" TargetType="ContentControl">
                <Grid Name="MyControl">
                    <ContentPresenter Content="{TemplateBinding Content}"/>
                    <Popup Name="MyPopup" StaysOpen="True" Placement="Bottom">
                        <ContentControl Template="{StaticResource PopupTemplate}"/>
                    </Popup>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger SourceName="MyControl" 
                 Property="UIElement.IsMouseOver" 
                 Value="True">
                        <Setter TargetName="MyPopup" 
                    Property="Popup.IsOpen" 
                    Value="True"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <StackPanel>
        <StackPanel>
            <!--<ContentControl Template="{StaticResource MyControlTemplate}">
                <Button Content="Test" Width="100" HorizontalAlignment="Left"/>
            </ContentControl>-->
        </StackPanel>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <TextBlock Text="Administración de CAFs" Grid.ColumnSpan="4" FontWeight="Heavy" FontSize="20" Margin="10 10 10 10" />
            <TextBox Grid.Row="1" Grid.Column="0" Width="100" HorizontalAlignment="Left"
				    x:Name="FolioStartTextBox"
				    materialDesign:HintAssist.Hint="Folio Inicio"
                    Style="{StaticResource MaterialDesignFloatingHintTextBox}">
                <TextBox.Text>
                    <Binding Path="FolioStartNumber" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <model:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <TextBox Grid.Row="1" Grid.Column="1" Width="100" HorizontalAlignment="Left"
				    x:Name="FolioEndTextBox"
				    materialDesign:HintAssist.Hint="Folio Fin"
                    Style="{StaticResource MaterialDesignFloatingHintTextBox}">
                <TextBox.Text>
                    <Binding Path="FolioEndNumber" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <model:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <ComboBox Grid.Row="1" Grid.Column="2" Width="100" HorizontalAlignment="Left"
                   x:Name="StoreComboBox"
                  materialDesign:HintAssist.Hint="Tienda" 
                  Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                  ItemsSource="{Binding StoreList}"                          
                  SelectedValue="{Binding SelectedStoreValue}">
                <ComboBox.SelectedItem>
                    <Binding Path="SelectedStoreValue" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <model:NotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </ComboBox.SelectedItem>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Name}"></TextBlock>
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
                <ComboBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel />
                    </ItemsPanelTemplate>
                </ComboBox.ItemsPanel>
            </ComboBox>

            <ComboBox Grid.Row="1" Grid.Column="3" Width="100" HorizontalAlignment="Left"
                   x:Name="DocumenTypeComboBox"
                  materialDesign:HintAssist.Hint="Tipo Documento" 
                  Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                  ItemsSource="{Binding DocumentTypeList}"                          
                  SelectedValue="{Binding SelectedDocumentTypeValue}">
                <ComboBox.SelectedItem>
                    <Binding Path="SelectedDocumentTypeValue" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <model:NotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </ComboBox.SelectedItem>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Description}"></TextBlock>
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
                <ComboBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel />
                    </ItemsPanelTemplate>
                </ComboBox.ItemsPanel>
            </ComboBox>
            <StackPanel Orientation="Horizontal" Grid.Row="4" Grid.Column="1" HorizontalAlignment="Center" Margin="5">
                <Button Command="{Binding SearchCommand}"  Content="Buscar" HorizontalAlignment="Center" Height="25" Padding="3"/>
                <Button Command="{Binding ClearCommand}" Content="Limpiar" HorizontalAlignment="Center" Margin="2,0,0,0" Height="25" Padding="3"/>
            </StackPanel>

            <StackPanel Grid.Row="6" Grid.ColumnSpan="6">
                <TextBlock Style="{StaticResource MaterialDesignSubheadingTextBlock}">Resultados</TextBlock>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="40"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <DataGrid Grid.Column="0" x:Name="dataGrid" Margin="0 8 0 0" ItemsSource="{Binding CafResults}" CanUserSortColumns="True" CanUserAddRows="False" AutoGenerateColumns="False"
                      materialDesign:DataGridAssist.CellPadding="13 8 8 8" materialDesign:DataGridAssist.ColumnHeaderPadding="8">
                        <DataGrid.Columns>
                            <StaticResource ResourceKey="SelectAllCheckboxColumn"/>
                            <materialDesign:MaterialDataGridTextColumn Binding="{Binding Id}"
                                                               Header="ID"                                                        
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                                                               />
                            <materialDesign:MaterialDataGridTextColumn Binding="{Binding Type}"
                                                               Header="Tipo"                                                        
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                                                               />
                            <materialDesign:MaterialDataGridTextColumn Binding="{Binding Date}"
                                                               Header="Fecha"                                                        
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                                                               />
                            <materialDesign:MaterialDataGridTextColumn Binding="{Binding Start}"
                                                               Header="Folio Inicio"                                                        
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                                                               />
                            <materialDesign:MaterialDataGridTextColumn Binding="{Binding End}"
                                                               Header="Folio Fin"                                                        
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                                                               />
                            <materialDesign:MaterialDataGridTextColumn Binding="{Binding Current}"
                                                               Header="Folio Actual"                                                        
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                                                               />

                            <materialDesign:MaterialDataGridTextColumn Binding="{Binding Store}"
                                                               Header="Tienda"                                                        
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                                                               />
                            <DataGridTemplateColumn>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Button 
                                                Content="Ver/Editar" 
                                                Command="{Binding Path=DataContext.ShowDialogCommand,RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                                CommandParameter="{Binding}"  
                                                Visibility="{Binding IsViewEditVisible, Converter={StaticResource BoolToVis}, FallbackValue=Hidden}"
                                                Height="20" Width="80" Margin="0 0 0 0" Padding="0"/>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <StackPanel Grid.Column="1" Margin="0 10 0 0 ">
                        <Button Command="{Binding ShowDialogCommand}" Content="+" VerticalAlignment="Center" HorizontalAlignment="Center"></Button>
                    </StackPanel>

                </Grid>

            </StackPanel>

            <StackPanel Orientation="Horizontal" Grid.Row="7" Grid.Column="1" HorizontalAlignment="Center" Margin="5">
                <Button Command="{Binding DeleteCommand}" Content="Eliminar" HorizontalAlignment="Center"/>
            </StackPanel>

        </Grid>
        <TextBlock Text="{Binding Status}" Background="Blue" Foreground="White" FontWeight="Bold" Margin="10 10 10 10" Height="25"></TextBlock>
    </StackPanel>

</UserControl>
